query='MATCH (n) RETURN n.type AS type LIMIT 10' result=[{'type': ''}, {'type': 'Subbed On'}, {'type': 'Subbed Off'}, {'type': 'Started'}, {'type': 'Represented By'}, {'type': 'For'}, {'type': ''}, {'type': 'Represent S'}, {'type': ''}, {'type': 'Represented S'}]
---
query='MATCH (n) RETURN DISTINCT n.type AS type' result=[{'type': 'PLAYED_FOR'}, {'type': 'STARTED'}, {'type': 'SUBBED_ON'}, {'type': 'REPRESENTED_BY'}, {'type': 'REPRESENTS'}, {'type': 'WON'}, {'type': 'PLAYED_IN'}, {'type': 'FOR'}, {'type': 'SUBSTITUTED_IN'}, {'type': 'SUBBED_OFF'}]
---
query='MATCH (n) RETURN n.type, collect(n.properties) AS properties' result=[{'type': 'Player', 'properties': ['dob', 'name', 'id']}, {'type': 'Team', 'properties': ['name', 'id']}, {'type': 'Match', 'properties': ['date', 'stage', 'id']}, {'type': 'Game', 'properties': ['date', 'stage', 'id']}, {'type': 'Person', 'properties': ['dob', 'name', 'id']}]
---
query="MATCH (n) RETURN n.id AS id, n.type, n.label AS label, n.minuteOn AS minuteOn, n.dob AS dob, n.name AS name, n.stage AS stage, n.date AS date, n.substitutedIn AS substitutedIn, n.for AS for, n.won AS won, n.representedBy AS representedBy, n.playedFor AS playedFor, n.playedIn AS playedIn, n.startAt AS startAt, n.endAt AS endAt WHERE n.type IN ['Subbed On', 'Started', 'Represented By', 'Played For'] OR n.label IN ['WON', 'FOR', 'PLAYED_IN', 'REPRESENTS', 'SUBSTITUTED_IN', 'REPRESENTED_BY'] ORDER BY id" result=[{'id': '5957', 'type': 'Subbed On', 'label': None, 'minuteOn': None, 'dob': '1982-11-01', 'name': 'Elaine', 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': '13959', 'playedFor': '13959', 'playedIn': None}, {'id': '6188', 'type': 'Started', 'label': None, 'minuteOn': None, 'dob': None, 'name': None, 'stage': 'Final', 'date': '2007-09-23', 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': None, 'playedFor': None, 'playedIn': '13959'}, {'id': 13859, 'type': 'Represented By', 'label': None, 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': None, 'playedFor': 13959}, {'id': 13975, 'type': None, 'label': 'REPRESENTS', 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': '5683', 'representedBy': 13959, 'playedFor': 13959, 'playedIn': 9181}, {'id': 13974, 'type': None, 'label': 'REPRESENTS', 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 13959, 'playedFor': 13959, 'playedIn': 9401}, {'id': 13977, 'type': None, 'label': 'REPRESENTS', 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 13959, 'playedFor': 13959, 'playedIn': 9184}, {'id': 13973, 'type': None, 'label': 'REPRESENTS', 'minuteOn': "66'", 'dob': '1974-10-03', 'name': 'Tania', 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 11532, 'playedFor': 11532}, {'id': 13977, 'type': None, 'label': 'REPRESENTS', 'minuteOn': "83'", 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 9040, 'playedFor': 9040}, {'id': 13959, 'type': 'Played For', 'label': None, 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 13975}, {'id': 13859, 'type': 'Played For', 'label': None, 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 13974}, {'id': 13859, 'type': 'Played For', 'label': None, 'minuteOn': None, 'dob': None, 'name': None, 'stage': None, 'date': None, 'substitutedIn': None, 'for': None, 'won': None, 'representedBy': 13977}]
---
query='MATCH (n) RETURN n.type AS node_type, TYPE(n.connectedNodes) AS connected_node_type, COUNT(DISTINCT n.connectedNodes) AS count' result=[{'node_type': 'Person', 'connected_node_type': 'Team', 'count': 1}, {'node_type': 'Person', 'connected_node_type': 'Game', 'count': 3}, {'node_type': 'Person', 'connected_node_type': '', 'count': 2}, {'node_type': 'Team', 'connected_node_type': 'Match', 'count': 1}, {'node_type': 'Team', 'connected_node_type': 'Game', 'count': 1}, {'node_type': 'Team', 'connected_node_type': '', 'count': 2}, {'node_type': 'Match', 'connected_node_type': 'Game', 'count': 3}, {'node_type': 'Match', 'connected_node_type': 'Person', 'count': 6}, {'node_type': 'Match', 'connected_node_type': '', 'count': 4}, {'node_type': 'Game', 'connected_node_type': '', 'count': 2}]
---
query='MATCH (match:Match) MATCH (player:Player)-[:PLAYED_IN]->(game:Game) WHERE game.id IN [2293, 2247, 2281] WITH match, COLLECT(DISTINCT player) AS players RETURN match.date, players' result=[{'date': '2007-09-21', 'players': []}, {'date': '2007-09-27', 'players': ['Elaine']}]
---
query='"MATCH (t:Team) RETURN t.name, COLLECT(DISTINCT r.stage) AS stages"' result=[{'name': 'Brazil', 'stages': ['Final', 'First stage', 'Semi-finals', 'Group Matches', 'Quarter-finals']}]
---
content='{\n    "query": """\nMATCH (n:Person)-[:PLAYED_IN]->(m:Match)\nWHERE n.name IN ["Renata Costa", "Tania"] AND m.stage IN ["Final", "Semi-finals", "Group Matches", "Quarter-finals"]\nWITH COUNT(m) AS score\nWHERE score >= 2\nRETURN n.name, size((n)<-[:PLAYED_IN]-(m)) AS matchCount\n""",\n    "result": [\n        {"name": "Renata Costa", "matchCount": 3},\n        {"name": "Tania", "matchCount": 1}\n    ]\n}' additional_kwargs={} response_metadata={'model': 'llama3.2', 'created_at': '2025-02-13T16:36:23.493805Z', 'done': True, 'done_reason': 'stop', 'total_duration': 8730402125, 'load_duration': 39482000, 'prompt_eval_count': 1184, 'prompt_eval_duration': 215000000, 'eval_count': 131, 'eval_duration': 8472000000, 'message': Message(role='assistant', content='', images=None, tool_calls=None)} id='run-68cfacc2-8664-44af-beab-943f6ae8dd6d-0' usage_metadata={'input_tokens': 1184, 'output_tokens': 131, 'total_tokens': 1315}
---
query='MATCH (t:Team)-[:PLAYED_IN]->(m:Match) RETURN t.name AS teamName COLLECT(DISTINCT m.stage) AS stages COLLECT(t.name) AS participatingTeams GROUP BY participatingTeams, stages HAVING COUNT(participatingTeams) > 1' result=[{'teamName': 'Brazil', 'participatingTeams': ['Brazil'], 'stages': ['Final', 'First stage']}, {'teamName': 'Brazil', 'participatingTeams': ['Brazil'], 'stages': ['Group Matches', 'Quarter-finals']}]
---
query="\nMATCH (n) \nWHERE NOT n:-Person AND NOT n:-Team\nRETURN n.name AS 'name', type(n) AS 'type'\nORDER BY n.name\n" result=[{'name': 'Brazil', 'type': 'Team'}, {'name': 'Elaine', 'type': 'Player'}, {'name': 'Aline', 'type': 'Person'}, {'name': 'Tania', 'type': 'Person'}, {'name': 'Renata Costa', 'type': 'Person'}]
---
query='MATCH (t:Team)-[: REPRESENTED_BY]->(p:Player) RETURN t.name, COUNT(DISTINCT p) AS numPlayers' result=[{'name': 'Brazil', 'numPlayers': 4}, {'name': '[]', 'numPlayers': 0}]
---
query='\n    MATCH (t:Team)\n    WITH t, COLLECT({teamName:t.name, totalGoals: count(m)-1 }) as goals\n    ORDER BY size(goals) DESC\n    RETURN collect({teamName:goals[0].teamName, averageGoals: sum(goals[1..]).totalGoals / size(goals[1..])}) as teamsWithAverages\n  ' result=[{'teamName': 'Brazil', 'averageGoals': 2.3333333333333335}]
---
