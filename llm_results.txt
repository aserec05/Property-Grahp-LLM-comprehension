MATCH (n) RETURN n.type
---
MATCH (n) RETURN DISTINCT n.RelationshipType
---
MATCH (n:Person)
OPTIONAL MATCH (n)-[:REPRESENTS]->(t:Team)
RETURN n, t

MATCH (n:Squad)
OPTIONAL MATCH (n)-[:FOR|IN_SQUAD|PLAYED_IN]->(m:Match)
RETURN n, m

MATCH (n:Tournament)
OPTIONAL MATCH (n)-[:NAMED|FOR|PARTICIPATED_IN|IN_TOURNAMENT]->(m)
RETURN n, m
---
```
MATCH (n) 
WHERE NOT n:Person
RETURN n.StartLabels, n.RelationshipType, n.EndLabels;
```
---
MATCH (n1:Node) - [r]-> (n2)
RETURN n1.type AS start_type, n2.type AS end_type, r.relationType
---
MATCH (p:Person)-[r:SCORED_GOAL]->(m:Match)
RETURN p.startLabel, m.startLabel
---
MATCH (t:Team)-[:PARTICIPATED_IN]->(m:Tournament)
WITH t, collect(m) as tournaments
RETURN t.name AS team, tournaments ORDER BY m.duration DESC
---
MATCH (p:Person)-[:SCORED_GOAL]->(m:Match)
WITH p, COUNT(m) as count
WHERE count >= 2
RETURN p
---
MATCH (t1:Team)-[:PARTICIPATED_IN]->(t2:Tournament)
WHERE t1 <> t2
RETURN t1, t2
---
MATCH (t:Team)-[:PARTICIPATED_IN|PLAYED_IN]->(m:Match), (p:Person)
WHERE t EndsWith 's' AND m
WITH collect(DISTINCT t) AS teams, p, collect(DISTINCT m) AS matches
OPTIONAL MATCH (t)<-[:FOR|-NAMED]-()
RETURN t.name, COLLECT(p.name) AS players, COLLECT(m.match_id) AS match_ids
---
MATCH t:Team
MATCH p:Person
WHERE NOT EXISTS (t)--[:REPRESENTS]->(p)
WITH count(t) AS num_teams
RETURN num_teams
---
MATCH (p:Person)-[:REPRESENTS]->(t:Team)
MATCH (p:Person)-[:SCORED_GOAL]->(m:Match)
WHERE t = p.represented_by
WITH collect(DISTINCT t) as teams, sum(m.scored_goal) as total_goals
ORDER BY total_goals DESC
---
